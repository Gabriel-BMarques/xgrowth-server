# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master
  
variables:
  
    # Azure Resource Manager connection created during pipeline creation
    azureSubscription: '9953ceeb-de7a-4191-91e7-b4af5ee3baf9'
  
    # Web app name
    webAppName: 'xgrowth-server-prod'
  
    # Environment name
    environmentName: 'production'
  
    # Agent VM image name
    vmImageName: 'ubuntu-latest'
  
stages:
    - stage: Build
      displayName: Build stage
      jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
    
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '17.x'
          displayName: 'Install Node.js'
    
        - script: |
            rm -rf package-lock.json
            npm install --legacy-peer-deps
          displayName: 'npm install'
    
        - task: ArchiveFiles@2
          displayName: 'Archive files'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            replaceExistingArchive: true
    
        - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          artifact: drop
    
    - stage: Deploy
      displayName: Deploy stage
      dependsOn: Build
      condition: succeeded()
      jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
              - task: AzureWebApp@1
                displayName: 'Azure Web App Deploy: xgrowth-server-prod'
                inputs:
                  azureSubscription: $(azureSubscription)
                  appType: webAppLinux
                  appName: $(webAppName)
                  package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                  startUpCommand: 'npm run start'